{'match_CHECK_CIS_LEVEL', 'CHECK_ALTERNATE_check702', 'data_dict[str(counter)+"CHECK_REMEDIATION"]', 'data_dict[str(counter)+"CHECK_CAF_EPIC"]', 'if match_CHECK_CIS_LEVEL:', 'data_dict[str(counter)+"CHECK_ASFF_COMPLIANCE_TYPE"]', 'if match_CHECK_ALTERNATE:', 'match_CHECK_ALTERNATE_check', 'CHECK_ASFF_COMPLIANCE_TYPE_check', 'match_CHECK_DOC', 'CHECK_ALTERNATE_check701', 'match_CHECK_ID', 'match_CHECK_ASFF_COMPLIANCE_TYPE', 'CHECK_ALTERNATE_extra706', 'header', 'data_dict[str(counter)+"CHECK_SCORED"]', 'r"CHECK_CAF_EPIC", line, re.MULTILINE | re.DOTALL)', 'CHECK_ALTERNATE_check203', 'CHECK_ALTERNATE_check206', 'CHECK_RISK_cextra', 'if match_CHECK_TITLE:', 'r"CHECK_SERVICENAME", line, re.MULTILINE | re.DOTALL)', 'data_dict[str(counter)+"CHECK_ALTERNATE"]', 'r"CHECK_ALTERNATE", line, re.MULTILINE | re.DOTALL)', 'CHECK_DESYNC_MITIGATION_MODE', 'if match_CHECK_REMEDIATION:', 'if match_CHECK_ID:', 'CHECK_ALTERNATE_check304', 'if match_CHECK_ASFF_RESOURCE_TYPE:', 'CHECK_ALTERNATE_extra707', 'match_CHECK_SCORED', 'r"CHECK_ASFF_COMPLIANCE_TYPE", line, re.MULTILINE | re.DOTALL)', 'CHECK_TITLE_check', 'CHECK_TITLE_extra', '# CHECK_DOC_checkN', 'match_CHECK_ALTERNATE', 'CHECK_ALTERNATE_check709', 'CHECK_SERVICENAME_extra', 'CHECK_SCORED_extra7', 'CHECK_CAF_EPIC_extra', 'CHECK_ALTERNATE_check309', '# CHECK_SCORED_checkN', 'CHECK_ALTERNATE_check776', 'CHECK_SEVERITY_extra', 'CHECK_ALTERNATE_check302', 'if match_CHECK_ASFF_COMPLIANCE_TYPE:', 'data_dict[str(counter)+"CHECK_RISK"]', 'match_CHECK_SEVERITY', 'r"CHECK_CIS_LEVEL", line, re.MULTILINE | re.DOTALL)', 'CHECK_SEVERITY_check', 'CHECK_ALTERNATE_check305', 'CHECK_ALTERNATE_extra709', 'CHECK_ALTERNATE_check102', 'CHECK_ALTERNATE_check204', 'CHECK_CIS_LEVEL_extra', 'CHECK_ASFF_COMPLIANCE_TYPE_extra', 'CHECK_ALTERNATE_check306', 'CHECK_ALTERNATE_extra704', 'CHECK_ALTERNATE_check201', 'r"CHECK_SEVERITY", line, re.MULTILINE | re.DOTALL)', '# CHECK_CAF_EPIC_checkN', 'if [[ $CHECK_DESYNC_MITIGATION_MODE', 'match_CHECK_TITLE', 'CHECK_ASFF_RESOURCE_TYPE_check', '"CHECK_REMEDIATION"]', 'if match_CHECK:', 'CHECK_ALTERNATE_check106', '# CHECK_ALTERNATE_checkN', 'CHECK_ALTERNATE_check104', 'CHECK_ID_check', 'CHECK_ALTERNATE_check404', 'data_dict[str(counter)+"CHECK_DOC"]', 'CHECK_ALTERNATE_check107', 'r"CHECK_DOC", line, re.MULTILINE | re.DOTALL)', 'data_dict[str(counter)+"CHECK_SEVERITY"]', 'data_dict[str(counter)+"CHECK_CIS_LEVEL"]', '# CHECK_ASFF_RESOURCE_TYPE_checkN', 'data_dict[str(counter)+"CHECK_ALTERNATE_check"]', '"CHECK_ASFF_COMPLIANCE_TYPE"]', 'CHECK_RISK_check', 'CHECK_ALTERNATE_extra702', '# CHECK_RISK_checkN', 'CHECK_ID_extra', '# CHECK_SEVERITY_checkNN', 'data_dict[str(counter)+"CHECK_SERVICENAME"]', 'CHECK_ALTERNATE_check308', 'CHECK_ALTERNATE_check707', '# CHECK_TITLE_checkN', 'CHECK_ASFF_TYPE_check', 'CHECK_REMEDIATION_extra', 'match_CHECK_CAF_EPIC', 'CHECK_ALTERNATE_check301', 'CHECK_ASFF_RESOURCE_TYPE_extra', 'check', '7.173,[extra7173] Security Groups created by EC2 Launch Wizard,NOT_SCORED,EXTRA,Medium,AwsEc2SecurityGroup,extra7173,extra7173,NA,ec2,Security Groups Created on the AWS Console using the EC2 wizard may allow port 22 from 0.0.0.0/0,Apply Zero Trust approach. Implement a process to scan and remediate security groups created by the EC2 Wizard. Recommended best practices is to use an authorized security group.,CHECK_DOC_extra7173', 'CHECK_ALTERNATE_check109', '7.181,[extra7181] Directory Service monitoring with CloudWatch logs,NOT_SCORED,EXTRA,Medium,AwsDirectoryService,extra7181,NA,NA,ds,"As a best practice, monitor your organization to ensure that changes are logged. This helps you to ensure that any unexpected change can be investigated and unwanted changes can be rolled back.",It is recommended that that the export of logs is enabled,CHECK_DOC_extra7181', 'CHECK_DOC_check', 'CHECK_ALTERNATE_check103', 'data_dict[str(counter)+"CHECK_ID"]', 'r"CHECK_REMEDIATION", line, re.MULTILINE | re.DOTALL)', 'CHECK_ALTERNATE_check402', 'CHECK_ALTERNATE_check705', 'if match_CHECK_CAF_EPIC:', 'CHECK_ALTERNATE_check209', 'CHECK_ALTERNATE_check401', 'r"CHECK_RISK", line, re.MULTILINE | re.DOTALL)', '# CHECK_ID_checkN', 'CHECK_ALTERNATE_extra', 'if match_CHECK_SERVICENAME:', 'CHECK_DOC_extra', 'CHECK_ALTERNATE_check', 'CHECK_ALTERNATE_check403', 'CHECK_ALTERNATE_check205', 'data_dict[str(counter)+"CHECK_ASFF_RESOURCE_TYPE"]', 'r"CHECK_TITLE", line, re.MULTILINE | re.DOTALL)', 'CHECK_SCORED_check', 'r"CHECK_ALTERNATE_check", line, re.MULTILINE | re.DOTALL)', '# CHECK_CIS_LEVEL_checkN', '# CHECK_REMEDIATION_checkN', 'CHECK_ALTERNATE_check307', 'CHECK_ALTERNATE_check746', '"CHECK_SERVICENAME"]', 'CHECK_ALTERNATE_check303', 'r"CHECK_SCORED", line, re.MULTILINE | re.DOTALL)', 'CHECK_ALTERNATE_check202', 'match_CHECK_SERVICENAME', 'r"CHECK", line, re.MULTILINE | re.DOTALL)', 'match_CHECK_REMEDIATION', 'CHECK_ALTERNATE_extra705', 'CHECK_ALTERNATE_check704', 'data_dict[str(counter)+"CHECK_TITLE"]', '"CHECK_ASFF_RESOURCE_TYPE"]', 'CHECK_SERVICENAME_check', 'if match_CHECK_SCORED:', 'r"CHECK_ID", line, re.MULTILINE | re.DOTALL)', 'CHECK_ALTERNATE_check706', "'CHECK_SEVERITY', 'CHECK_ASFF_RESOURCE_TYPE', 'CHECK_ALTERNATE', 'CHECK_ALTERNATE_check', 'CHECK_ASFF_COMPLIANCE_TYPE', 'CHECK_SERVICENAME', 'CHECK_RISK', 'CHECK_REMEDIATION', 'CHECK_DOC', 'CHECK_CAF_EPIC']", 'if match_CHECK_ALTERNATE_check:', 'CHECK_ALTERNATE_check101', 'CHECK_CAF_EPIC_check', 'CHECK_RISK_extra', 'CHECK_ALTERNATE_check207', '# CHECK_SERVICENAME_checkN', 'CHECK_CIS_LEVEL_check', 'CHECK_ALTERNATE_check108', 'CHECK_ALTERNATE_check703', 'match_CHECK_ASFF_RESOURCE_TYPE', 'match_CHECK_RISK', 'CHECK_ALTERNATE_check208', 'match_CHECK', 'CHECK_ASFF_TYPE_extra', 'CHECK_ALTERNATE_extra708', 'CHECK_ALTERNATE_check105', 'CHECK_SCORED_extra', 'CHECK_REMEDIATION_check', 'if match_CHECK_DOC:', 'CHECK_ALTERNATE_extra701', 'if match_CHECK_RISK:', 'CHECK_ALTERNATE_check708', 'if match_CHECK_SEVERITY:', 'r"CHECK_ASFF_RESOURCE_TYPE", line, re.MULTILINE | re.DOTALL)', 'CHECK_ALTERNATE_extra703'}